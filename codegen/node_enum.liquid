// This file is autogenerated by {{ template }}

use crate::nodes::InnerNode;
use crate::nodes::*;

/// Generic combination of all known nodes.
#[allow(missing_docs)]
#[derive(Debug, Clone, PartialEq)]
#[repr(C)]
pub enum Node {
{%- for node in nodes %}
    {{ node.camelcase_name }}({{ node.camelcase_name }}),
{%- endfor %}
}

impl Node {
    pub(crate) fn inner_ref(&self) -> &dyn InnerNode {
        match &self {
{%- for node in nodes %}
            Node::{{ node.camelcase_name }}(inner) => inner,
{%- endfor %}
        }
    }
}
